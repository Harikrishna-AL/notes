<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes</title>
    <link>https://harikrishna-al.github.io/notes/</link>
    <description>Recent content on Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 23 Apr 2023 22:39:12 +0530</lastBuildDate><atom:link href="https://harikrishna-al.github.io/notes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>NeRF (Neural Radience Fields)</title>
      <link>https://harikrishna-al.github.io/notes/posts/nerf/</link>
      <pubDate>Sun, 23 Apr 2023 22:39:12 +0530</pubDate>
      
      <guid>https://harikrishna-al.github.io/notes/posts/nerf/</guid>
      <description>NeRF (Neural Radience Fields) what are NeRFs? NeRFs are a type of network used to generate unseen views of an object using the seen views as the dataset. Archeitecture </description>
    </item>
    
    <item>
      <title>NeRF</title>
      <link>https://harikrishna-al.github.io/notes/posts/nerf_model/</link>
      <pubDate>Sun, 23 Apr 2023 21:57:32 +0530</pubDate>
      
      <guid>https://harikrishna-al.github.io/notes/posts/nerf_model/</guid>
      <description>
what are NeRFs? NeRFs are a type of network used to generate unseen views of an object using the seen views as the dataset.
Archeitecture </description>
    </item>
    
    <item>
      <title>Diffusion</title>
      <link>https://harikrishna-al.github.io/notes/posts/diffusion/</link>
      <pubDate>Tue, 21 Feb 2023 22:39:12 +0530</pubDate>
      
      <guid>https://harikrishna-al.github.io/notes/posts/diffusion/</guid>
      <description>Denoising Diffusion Probablistic Models This note is about the diffusion model. It will cover about it&amp;rsquo;s working and implementation both mathematically and code wise. Diffusion is one of the latest techniques used to generate new images by basically destroy them by adding more and more noise. So a basic diffusion model will contain a noise scheduler, a neural network to predict the noise in an image at given timestamp (t) (U-Net is this case) and a loss function which enables the model to learn from dataset.</description>
    </item>
    
  </channel>
</rss>
